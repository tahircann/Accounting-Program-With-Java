
import com.lesson.hibernate.entity.Calisan;
import com.lesson.hibernate.entity.Tedarikci;
import com.lesson.hibernate.util.HibernateUtil;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.hibernate.Session;
import org.hibernate.Transaction;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Tako
 */
public class tedarikciEkrani extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form tedarikciEkrani
     */
    public tedarikciEkrani() {
        initComponents();
        model = (DefaultTableModel) tedarikciTablo.getModel();

    }

    public ArrayList<Tedarikci> getTedarikcilerArrayList() {
        // Listelerin bastırılması için gerekli array sınıfı
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction transaction = null;
        ArrayList<Tedarikci> tedarikciler = null;

        try {
            transaction = session.beginTransaction();
            tedarikciler = (ArrayList<Tedarikci>) session.createQuery("from Tedarikci", Tedarikci.class).list();

            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }
        return tedarikciler;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tedarikciTablo = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        ekleButon = new javax.swing.JButton();
        SilButon = new javax.swing.JButton();
        duzenleButon = new javax.swing.JButton();
        tedarikciAdiTxt = new javax.swing.JTextField();
        tedarikciAdi1 = new javax.swing.JLabel();
        tedarikciSiltext = new javax.swing.JLabel();
        tedarikciSiltxt = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        tedarikciListele = new javax.swing.JButton();
        aramaCubugu = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tedarikciTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tedarikçi No", "Tedarikci Adı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tedarikciTablo);

        ekleButon.setText("Ekle");
        ekleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleButonActionPerformed(evt);
            }
        });

        SilButon.setText("Sil");
        SilButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SilButonActionPerformed(evt);
            }
        });

        duzenleButon.setText("Düzenle");
        duzenleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duzenleButonActionPerformed(evt);
            }
        });

        tedarikciAdiTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tedarikciAdiTxtActionPerformed(evt);
            }
        });

        tedarikciAdi1.setText("Tedarikçi Adı:");

        tedarikciSiltext.setText("Silinmesi İstenen Tedarikçi No:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duzenleButon)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tedarikciAdi1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tedarikciAdiTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ekleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tedarikciSiltext, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tedarikciSiltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(SilButon, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(130, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tedarikciAdi1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tedarikciAdiTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ekleButon))
                .addGap(40, 40, 40)
                .addComponent(duzenleButon)
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tedarikciSiltext)
                    .addComponent(SilButon)
                    .addComponent(tedarikciSiltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tedarikciListele.setText("Tedarikçi Listele");
        tedarikciListele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tedarikciListeleActionPerformed(evt);
            }
        });

        aramaCubugu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                aramaCubuguKeyReleased(evt);
            }
        });

        jLabel1.setText("Ara:");

        jLabel2.setText("İşlem yaptırdıktan sonra listele butonuna basınız.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tedarikciListele, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(aramaCubugu, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(374, 374, 374))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tedarikciListele)
                    .addComponent(aramaCubugu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ekleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleButonActionPerformed
        // tedarikçi ekleme için gerekli özel hibernate fonksiyonları ile veri tabanına veri eklenmesi
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction transaction = null;
        transaction = session.beginTransaction();

        Tedarikci tedarikci = new Tedarikci();
        tedarikci.getTedarikciNo();
        tedarikci.setTedarikciAdi(tedarikciAdiTxt.getText());

        session.save(tedarikci);
        transaction.commit();
        session.close();
    }//GEN-LAST:event_ekleButonActionPerformed

    private void SilButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SilButonActionPerformed
        //tedarikçi silmek için gerekli özel hibernate fonksiyonları ile veri tabanına veri eklenmesi
        Transaction transaction = null;
        try ( Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();
            Tedarikci tedarikciler = new Tedarikci();

            tedarikciler.setTedarikciNo(Integer.parseInt(tedarikciSiltxt.getText()));
            if (tedarikciler.getTedarikciNo() == Integer.parseInt(tedarikciSiltxt.getText())) {
                session.delete(tedarikciler);
                transaction.commit();

            } else {
                JOptionPane.showMessageDialog(null, "Çalışan Mevcut değil");
            }
            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        }
    }//GEN-LAST:event_SilButonActionPerformed

    private void duzenleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duzenleButonActionPerformed
        //kullanıcının jTable dan mouse ile seçtiği değerin güncellenmesi
        DefaultTableModel model = (DefaultTableModel) tedarikciTablo.getModel();
        int index = tedarikciTablo.getSelectedRow();
        Transaction transaction = null;
        try ( Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();

            Tedarikci tedarikciler = (Tedarikci) session.get(Tedarikci.class, index + 1);

            String YeniTedarikci = JOptionPane.showInputDialog(null, "Yeni Tedarikçi ADI:", tedarikciler.getTedarikciAdi());

            model.setValueAt(YeniTedarikci, index, 1);

            tedarikciler.setTedarikciAdi(YeniTedarikci);

            transaction.commit();

            JOptionPane.showMessageDialog(null, "Tedarikçi Başarıyla Değiştirildi");

        } catch (Exception e) {
            e.printStackTrace();
            if (transaction != null) {
                transaction.rollback();
            }

        }
    }//GEN-LAST:event_duzenleButonActionPerformed

    private void tedarikciAdiTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tedarikciAdiTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tedarikciAdiTxtActionPerformed

    private void tedarikciListeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tedarikciListeleActionPerformed
        // Arrraylisti döndüren ürün listeleme butonu

        try {
            ArrayList<Tedarikci> tedarikciler = getTedarikcilerArrayList();

            while (model.getRowCount() > 0) {// Satır sayısı 0 lanana kadar 0. sıradaki satırı sileceğiz. Böylece tablo boşaltılacak.
                model.removeRow(0);
            }

            for (Tedarikci tedarikci : tedarikciler) {
                Object[] row = {tedarikci.getTedarikciNo(), tedarikci.getTedarikciAdi()};
                model.addRow(row);
            }

        } catch (Exception e) {

            e.printStackTrace();
        }
    }//GEN-LAST:event_tedarikciListeleActionPerformed
    public void dinamikAra(String ara) {
        //arama çubuğu içim gerekli jTable da değer arayan method
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tedarikciTablo.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(ara));

    }

    private void aramaCubuguKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aramaCubuguKeyReleased
        String ara = aramaCubugu.getText();
        dinamikAra(ara);
    }//GEN-LAST:event_aramaCubuguKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tedarikciEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tedarikciEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tedarikciEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tedarikciEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tedarikciEkrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SilButon;
    private javax.swing.JTextField aramaCubugu;
    private javax.swing.JButton duzenleButon;
    private javax.swing.JButton ekleButon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel tedarikciAdi1;
    private javax.swing.JTextField tedarikciAdiTxt;
    private javax.swing.JButton tedarikciListele;
    private javax.swing.JLabel tedarikciSiltext;
    private javax.swing.JTextField tedarikciSiltxt;
    private javax.swing.JTable tedarikciTablo;
    // End of variables declaration//GEN-END:variables
}
